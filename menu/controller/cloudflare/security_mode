#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on Ubuntu             #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

# Check if python3 is installed
if ! command -v python3 >/dev/null 2>&1; then
    echo "Python 3 is required but not installed. Installing..."
    apt-get update
    apt-get install -y python3 python3-pip
fi

# Check if cloudflare module is installed
if ! python3 -c "import CloudFlare" 2>/dev/null; then
    echo "Installing Cloudflare Python module..."
    pip3 install -r /var/hostvn/menu/python/requirements.txt
fi

# Check if API key is configured
if [ ! -f "/var/hostvn/.cloudflare.conf" ]; then
    echo "Cloudflare API key is not set. Please set your API key first."
    read -n 1 -s -r -p "Press any key to continue..."
    clear
    . /var/hostvn/menu/controller/cloudflare/set_api_key
    clear
fi

echo "========================================"
echo "       Security Mode Management        "
echo "========================================"
echo ""

# Get list of domains from Cloudflare
DOMAINS=$(python3 /var/hostvn/menu/python/cloudflare/cloudflare_api.py list_domains)
if [ $? -ne 0 ]; then
    echo "Failed to get domains from Cloudflare. Please check your API key."
    read -n 1 -s -r -p "Press any key to continue..."
    clear
    exit 1
fi

# If no domains found
if [ -z "$DOMAINS" ]; then
    echo "No domains found in your Cloudflare account."
    echo "Please add a domain first."
    read -n 1 -s -r -p "Press any key to continue..."
    clear
    exit 1
fi

# Display domains
echo "Select a domain to manage security modes:"
echo ""
i=1
for domain in $DOMAINS; do
    echo "$i. $domain"
    i=$((i+1))
done
echo ""

read -r -p "Enter domain number: " DOMAIN_NUM

# Validate input
if ! [[ "$DOMAIN_NUM" =~ ^[0-9]+$ ]]; then
    echo "Invalid input. Please enter a number."
    read -n 1 -s -r -p "Press any key to continue..."
    clear
    exit 1
fi

# Get selected domain
i=1
for domain in $DOMAINS; do
    if [ "$i" -eq "$DOMAIN_NUM" ]; then
        SELECTED_DOMAIN=$domain
        break
    fi
    i=$((i+1))
done

if [ -z "$SELECTED_DOMAIN" ]; then
    echo "Invalid domain selection."
    read -n 1 -s -r -p "Press any key to continue..."
    clear
    exit 1
fi

# Show security mode menu
CHOICE=1

while [ "$CHOICE" != "0" ]
do
    clear
    echo "========================================"
    echo " Security Modes for $SELECTED_DOMAIN   "
    echo "========================================"
    echo ""
    echo "1. Toggle Under Attack Mode"
    echo "2. Toggle Development Mode"
    echo "3. View Current Security Settings"
    echo "0. Back"
    echo "========================================"
    read -r -p "Enter your choice: " CHOICE

    case $CHOICE in
        1)
            clear
            echo "Under Attack Mode for $SELECTED_DOMAIN"
            echo "========================================"
            echo "Under Attack Mode provides additional security when your site is under DDoS attack."
            echo "It adds an interstitial page to verify visitors are legitimate before accessing your site."
            echo ""
            read -r -p "Enable Under Attack Mode? (y/n): " ATTACK_CHOICE
            
            if [ "$ATTACK_CHOICE" = "y" ] || [ "$ATTACK_CHOICE" = "Y" ]; then
                SECURITY_LEVEL="under_attack"
                STATUS_MSG="enabled"
            else
                SECURITY_LEVEL="medium"
                STATUS_MSG="disabled"
            fi
            
            RESULT=$(python3 /var/hostvn/menu/python/cloudflare/cloudflare_api.py update_security_level "$SELECTED_DOMAIN" "$SECURITY_LEVEL")
            
            if [ $? -eq 0 ]; then
                echo "Under Attack Mode $STATUS_MSG successfully!"
            else
                echo "Failed to update Under Attack Mode: $RESULT"
            fi
            
            read -n 1 -s -r -p "Press any key to continue..."
            ;;
        2)
            clear
            echo "Development Mode for $SELECTED_DOMAIN"
            echo "========================================"
            echo "Development Mode temporarily bypasses Cloudflare's cache for your website."
            echo "This is useful during website development to see changes immediately."
            echo "Development mode automatically turns off after 3 hours."
            echo ""
            read -r -p "Enable Development Mode? (y/n): " DEV_CHOICE
            
            if [ "$DEV_CHOICE" = "y" ] || [ "$DEV_CHOICE" = "Y" ]; then
                ENABLED=true
                STATUS_MSG="enabled"
            else
                ENABLED=false
                STATUS_MSG="disabled"
            fi
            
            RESULT=$(python3 /var/hostvn/menu/python/cloudflare/cloudflare_api.py toggle_development_mode "$SELECTED_DOMAIN" "$ENABLED")
            
            if [ $? -eq 0 ]; then
                echo "Development Mode $STATUS_MSG successfully!"
                if [ "$ENABLED" = true ]; then
                    echo "It will automatically turn off after 3 hours."
                fi
            else
                echo "Failed to update Development Mode: $RESULT"
            fi
            
            read -n 1 -s -r -p "Press any key to continue..."
            ;;
        3)
            clear
            echo "Current Security Settings for $SELECTED_DOMAIN"
            echo "========================================"
            python3 /var/hostvn/menu/python/cloudflare/cloudflare_api.py get_security_settings "$SELECTED_DOMAIN"
            echo ""
            read -n 1 -s -r -p "Press any key to continue..."
            ;;
        0)
            clear
            ;;
        *)
            echo "Invalid option"
            read -n 1 -s -r -p "Press any key to continue..."
            ;;
    esac
done
