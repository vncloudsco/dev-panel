#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on Ubuntu             #
#                                                                    #
#                Author: TinyActive - Base On HOSTVN.VN Scripts      #
#                  Website: https://github.com/TinyActive/panel      #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/validate/rule
source /var/hostvn/menu/helpers/function

_select_type() {
    echo "Lua chon kieu backup ?"
    PS3='Nhap lua chon cua ban (1-3): '
    options=("Backup theo ten mien" "Backup toan bo ten mien" "Huy tao cronjob")
    select opt in "${options[@]}"; do
        case $opt in
        "Backup theo ten mien")
            type="one"
            break
            ;;
        "Backup toan bo ten mien")
            type="all"
            break
            ;;
        "Huy tao cronjob")
            type="0"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done
}

_select_time() {
    echo "Lua chon thoi gian ?"
    PS3='Nhap lua chon cua ban (1-4): '
    options=("Backup 1 lan/ngay" "Backup 1 lan/tuan" "Backup 1 lan/thang" "Backup 1 lan/nam" "Huy tao cronjob")
    select opt in "${options[@]}"; do
        case $opt in
        "Backup 1 lan/ngay")
            time="@midnight"
            break
            ;;
        "Backup 1 lan/tuan")
            time="@weekly"
            break
            ;;
        "Backup 1 lan/thang")
            time="@monthly"
            break
            ;;
        "Backup 1 lan/nam")
            time="@yearly"
            break
            ;;
        "Huy tao cronjob")
            time="0"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done
}

_input_backup_num() {
    echo "Nhap so ban backup ban muon luu tru: "
    echo "VD: Backup hang ngay va nhap 14 - Se luu backup 14 ngay gan nhat - Cac ban cu hon se bi xoa"
    echo "VD: Backup hang tuan va nhap 3 - Se luu backup 3 tuan gan nhat - Cac ban cu hon se bi xoa"
    while true; do
        read -r -p "Nhap vao lua chon cua ban [0 = Thoat]:" backup_num
        echo
        if [[ "${backup_num}" =~ ^[0-9]+$ ]]; then
            break
        else
            printf "%s\n" "${RED}Gia tri khong chinh xac. Vui long nhap lai.${NC}"
        fi
    done
}

_set_backup_time() {
    _input_backup_num
    if [[ "${time}" == "@weekly" ]]; then
        backup_num=$((backup_num * 7))
    elif [[ "${time}" == "@monthly" ]]; then
        backup_num=$((backup_num * 30))
    elif [[ "${time}" == "@yearly" ]]; then
        backup_num=$((backup_num * 365))
    else
        backup_num="${backup_num}"
    fi

    sed -i '/backup_num=/d' "${FILE_INFO}"
    echo "backup_num=${backup_num}" >>"${FILE_INFO}"
}

_delete_old_backup_cron(){
    cron_local_backup=$(crontab -l | grep -w 'backup_local')
    if [ -n "${cron_local_backup}" ]; then
        crontab -u root -l | grep -v "${cron_local_backup}" | crontab -u root -
    fi

    cron_gg_all_backup=$(crontab -l | grep -w 'gg_drive_all')
    if [ -n "${cron_gg_all_backup}" ]; then
        crontab -u root -l | grep -v "${cron_gg_all_backup}" | crontab -u root -
    fi

    cron_gg_one_backup=$(crontab -l | grep -w 'gg_drive_one')
    if [ -n "${cron_gg_one_backup}" ]; then
        crontab -u root -l | grep -v "${cron_gg_one_backup}" | crontab -u root -
    fi
}

_create_cron_backup_all() {
    cron_all_exists=$(crontab -l | grep -w 'backup_onedrive_all')
    if [ -z "${cron_all_exists}" ]; then
        _delete_old_backup_cron
        crontab -l >backupOneDrive
        echo "${time} bash /var/hostvn/menu/cronjob/backup_onedrive_all >/dev/null 2>&1" >>backupOneDrive
        crontab backupOneDrive
        rm -rf backupOneDrive
    fi
}

_create_cron_backup_one() {
    cron_one_exists=$(crontab -l | grep -w 'backup_onedrive_one')
    if [ -z "${cron_one_exists}" ]; then
        _delete_old_backup_cron
        crontab -l >backupOneDrive
        echo "${time} bash /var/hostvn/menu/cronjob/backup_onedrive_one >/dev/null 2>&1" >> backupOneDrive
        crontab backupOneDrive
        rm -rf backupOneDrive
    fi
}

_backup_one() {
    _select_domain
    if [[ -z "${domain}" && -z "${ALERT}" ]]; then
        clear
        printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}"
    else
        if [ -z "${ALERT}" ]; then
            _select_time
            if [ "${time}" == "0" ]; then
                clear
                printf "%s\n" "${RED}Huy tao cronjob.${NC}"
            else
                _set_backup_time
                if [[ "${backup_num}" == "0" || -z "${backup_num}" ]]; then
                    clear
                    printf "%s\n" "${RED}Huy tao cronjob.${NC}"
                else
#                    sed -i '/remote/d' "${FILE_INFO}"
#                    echo "remote=onedrive" >>"${FILE_INFO}"
                    if [ ! -d "${BASH_DIR}/onedrive" ]; then
                        mkdir -p "${BASH_DIR}/onedrive"
                    fi
                    if [ ! -f "${BASH_DIR}/onedrive/${domain}" ]; then
                        touch "${BASH_DIR}"/onedrive/"${domain}"
                    fi
                    _create_cron_backup_one
                    clear
                    printf "%s\n" "${GREEN}Tao cronjob thanh cong.${NC}"
                    echo ""
                fi
            fi
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

_backup_all() {
    _select_time
    if [ "${time}" == "0" ]; then
        clear
        printf "%s\n" "${RED}Huy tao cronjob.${NC}"
    else
        _set_backup_time
        if [ "${backup_num}" == "0" ]; then
            clear
            printf "%s\n" "${RED}Huy tao cronjob.${NC}"
        else
            _create_cron_backup_all
            clear
            printf "%s\n" "${GREEN}Tao cronjob thanh cong.${NC}"
            echo ""
        fi
    fi
}

_run() {
    _select_type
    if [ "${type}" == "0" ]; then
        clear
        printf "%s\n" "${RED}Huy tao cronjob.${NC}"
    else
        if [ "${type}" == "one" ]; then
            _backup_one
        else
            _backup_all
        fi
    fi
}

ALERT=""
time=""
backup_num=""
domain=""
type=""

if [ -f "/root/.config/rclone/rclone.conf" ]; then
    check_onedrive_remote=$(grep -w "onedrive" "/root/.config/rclone/rclone.conf" | cut -f2 -d'=')
    if [[ -z "${check_onedrive_remote}" ]]; then
        clear
        printf "%s\n" "${RED}Ban chua cau hinh ket noi voi OneDrive.${NC}"
    else
        _run
    fi
else
    clear
    printf "%s\n" "${RED}Ban chua cau hinh ket noi voi OneDrive.${NC}"
fi

menu_cronjob
