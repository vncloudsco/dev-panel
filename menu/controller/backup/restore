#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on Ubuntu             #
#                                                                    #
#                Author: TinyActive - Base On HOSTVN.VN Scripts      #
#                  Website: https://github.com/TinyActive/panel      #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/validate/rule
source /var/hostvn/menu/helpers/function

_select_backup_location() {
    clear
    printf "%s\n" "Lua chon noi luu backup"
    PS3="Nhap vao lua chon cua ban [ 1 - 3 ]: "
    location_options=("VPS (Local)" "Google Drive" "Cancel")
    select opt_location in "${location_options[@]}"; do
        case $opt_location in
        "VPS (Local)")
            location="local"
            break
            ;;
        "Google Drive")
            location="drive"
            break
            ;;
        "Cancel")
            location="cancel"
            break
            ;;
        *) printf "${RED}%s${NC}\n" "Lua chon cua ban khong chinh xac. Vui long chon lai. $REPLY" ;;
        esac
    done
}

_selection_restore_type() {
    clear
    printf "%s\n" "Lua chon kieu khoi phuc du lieu"
    PS3="Nhap vao lua chon cua ban [ 1 - 4 ]: "
    type_options=("Khoi phuc full (Source + DB)" "Khoi phuc ma nguon" "Khoi phuc Database" "Cancel")
    select opt_type in "${type_options[@]}"; do
        case $opt_type in
        "Khoi phuc full (Source + DB)")
            type="full"
            break
            ;;
        "Khoi phuc ma nguon")
            type="source"
            break
            ;;
        "Khoi phuc Database")
            type="database"
            break
            ;;
        "Cancel")
            type="cancel"
            break
            ;;
        *) printf "${RED}%s${NC}\n" "Lua chon cua ban khong chinh xac. Vui long chon lai. $REPLY" ;;
        esac
    done
}

_create_drive_connect() {
    clear
    printf "%s\n" "${RED}Ban chua cau hinh ket noi voi Google Drive.${NC}"
    prompt_connect_drive="n"
    echo "Ban co muon cau hinh ket noi voi Google Drive khong ?"
    PS3='Nhap lua chon cua ban (1-2): '
    options=("Yes" "No")
    select opt in "${options[@]}"; do
        case $opt in
        "Yes")
            prompt_connect_drive="y"
            break
            ;;
        "No")
            prompt_connect_drive="n"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done

    if [[ "${prompt_connect_drive}" =~ ^([yY])$ ]]; then
        while true; do
            echo "Ten ket noi khong chua ky tu dac biet va dai 5 ky tu tro len."
            read -r -p "Nhap vao ten ket noi muon tao (Viet lien, khong dau) [0 = Thoat]: " remote_name
            echo
            if validate_user "${remote_name}" || [ "${remote_name}" == "0" ]; then
                break
            else
                printf "%s\n" "${RED}Ten ket noi khong dung dinh dan. Vui long nhap lai.${NC}"
            fi
        done

        if [ "${remote_name}" == "0" ]; then
            clear
            printf "%s\n" "${RED}Huy hanh dong.${NC}"
        else
            rclone config create "${remote_name}" drive config_is_local false scope drive use_trash false
            clear
            _run
        fi
    else
        clear
        printf "${RED}%s${NC}\n" "Huy thao tac."
    fi
}

_conditions() {
    if ! check_backup_exists "${date}" "${domain}"; then
        ALERT="Ten mien nay khong co backup."
    fi

    if ! check_backup_empty "${date}" "${domain}"; then
        ALERT="Ten mien nay khong co backup."
    fi

    if [[ "${type}" == "source" || "${type}" == "full" ]]; then
        if [ ! -f "/home/backup/${date}/${domain}/${domain}.tar.gz" ]; then
            ALERT="Ten mien nay khong co backup ma nguon."
        fi
    fi

    if [[ "${type}" == "full" ]]; then
        if [[ ! -f "/home/backup/${date}/${domain}/${db_name}.sql.gz" && ! -f "/home/backup/${date}/${domain}/${db_name}.sql" ]]; then
            ALERT="Ten mien nay khong co backup database."
        fi
    fi
}

_sql_list() {
    sql_files=()
    for entry in *.{sql,sql.gz}; do
        if [ -f "${entry}" ]; then
            sql_files+=("${entry}")
        fi
    done

    echo "Chon file database muon khoi phuc"
    PS3="Nhap vao lua chon cua ban [0 = Thoat]: "
    select opt in "${sql_files[@]}"; do
        sql=$opt
        break
    done
}

_import_database() {
    if [[ ${sql} == *"sql.gz"* ]]; then
        sql_file=$(echo "${sql}" | cut -f1 -d'.')
        gzip -d "${sql}"
        mysql -uadmin -p"${mysql_pwd}" "${db_name}" <  "${sql_file}".sql
    else
        mysql -uadmin -p"${mysql_pwd}" "${db_name}" < "${sql}"
    fi
}

_decompress_source() {
    if [[ ! -d "/home/${user}/${domain}/public_html" ]]; then
        mkdir -p /home/"${user}"/"${domain}"/public_html
    fi
    _cd_dir /home/backup/"${date}"/"${domain}"
    rm -rf /home/"${user}"/"${domain}"/public_html/*
    tar xvzf /home/backup/"${date}"/"${domain}"/"${domain}".tar.gz -C /home/"${user}"/"${domain}"/
    chmod 711 /home
    chmod 755 /home/"${user}"
    chmod 711 /home/"${user}"/"${domain}"
    chmod 711 /home/"${user}"/"${domain}"/logs
    chmod 755 /home/"${user}"/"${domain}"/public_html
    find /home/"${user}"/"${domain}"/public_html/ -type d -print0 | xargs -I {} -0 chmod 0755 {}
    find /home/"${user}"/"${domain}"/public_html/ -type f -print0 | xargs -I {} -0 chmod 0644 {}
    chown root:root /home/"${user}"
    chown -R "${user}":"${user}" /home/"${user}"/"${domain}"
    chown -R "${user}":"${user}" /home/"${user}"/tmp
    chown -R "${user}":"${user}" /home/"${user}"/php
}

_select_drive_backup_date() {
    clear
    echo "Chon ngay ban muon khoi phuc: "
    dates=()
    selects_date=$(rclone lsf "${remote}":"${IPADDRESS}")
    for entry_date in ${selects_date}; do
        select_date=${entry_date///}
        dates+=("${select_date}")
    done
    PS3="Nhap lua chon cua ban [0 = Thoat]: "
    select date in "${dates[@]}"; do
        date=${date}
        break
    done
}

_google_drive_action() {
    _select_remote
    if [ -z "${remote}" ]; then
        ALERT="${RED}Ban da chon huy khoi phuc du lieu.${NC}"
    else
        _select_drive_backup_date
        if [ -z "${date}" ]; then
            ALERT="${RED}Ban da chon huy khoi phuc du lieu.${NC}"
        else
            clear
            echo "Chon ten mien ban muon khoi phuc: "
            selects_domain=$(rclone lsf "${remote}":"${IPADDRESS}"/"${date}")
            domains=()
            for entry_domain in ${selects_domain}; do
                select_domain=${entry_domain///}
                domains+=("${select_domain}")
            done
            PS3="Nhap lua chon cua ban [0 = Thoat]: "
            select domain in "${domains[@]}"; do
                domain=${domain}
                break
            done
            if [[ -z "${domain}" || "${domain}" == "0" ]]; then
                ALERT="${RED}Ban da chon huy khoi phuc du lieu.${NC}"
            else
                if [ -d "/home/backup/${date}/${domain}" ]; then
                    rm -rf /home/backup/"${date}"/"${domain}"
                fi

                mkdir -p /home/backup/"${date}"/"${domain}"
                user=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
                db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
                clear
                printf "%s\n" "Dang download du lieu. Vui long doi..."
                rclone copy "${remote}:/${IPADDRESS}/${date}/${domain}" /home/backup/"${date}"/"${domain}" --bwlimit 30M
            fi
        fi
    fi
}

_restore_source() {
    if [ "${location}" == "local" ]; then
        _list_backup
        if [[ -z "${date}" || -z "${domain}" ]]; then
            clear
            printf "%s\n" "${RED}Ban da chon huy thao tac${NC}"
        else
            user=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            _conditions
            if [ ! -f "/home/backup/${date}/${domain}/${domain}.tar.gz" ]; then
                ALERT="Ten mien nay khong co backup."
            fi

            if [ -z "${ALERT}" ]; then
                clear
                printf "%s\n" "Dang khoi phuc du lieu. Vui long doi cho toi khi qua trinh hoan tat..."
                _decompress_source
                clear
                printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
            else
                clear
                printf "${RED}%s${NC}\n" "${ALERT}"
            fi
        fi
    else
        _google_drive_action
        _conditions
        if [ -z "${ALERT}" ]; then
            _decompress_source
            rm -rf /home/backup/"${date}"/"${domain}"
            clear
            printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
        else
            clear
            printf "${RED}%s${NC}\n" "${ALERT}"
        fi
    fi
}

_restore_database() {
    if [ "${location}" == "local" ]; then
        _list_backup
        if [[ -z "${date}" || -z "${domain}" ]]; then
            clear
            printf "%s\n" "${RED}Ban da chon huy thao tac${NC}"
        else
            user=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            _conditions

            if [ -z "${ALERT}" ]; then
                _cd_dir /home/backup/"${date}"/"${domain}"
                _sql_list
                if [ -z "${sql}" ]; then
                    clear
                    printf "%s\n" "${RED}Ten mien nay khong co backup.${NC}"
                else
                    clear
                    printf "%s\n" "Dang khoi phuc du lieu. Vui long doi cho toi khi qua trinh hoan tat..."
                    _import_database
                    clear
                    printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
                fi
            else
                clear
                printf "${RED}%s${NC}\n" "${ALERT}"
            fi
        fi
    else
        _google_drive_action
        _conditions

        if [ -z "${ALERT}" ]; then
            clear
            _cd_dir /home/backup/"${date}"/"${domain}"
            _sql_list
            if [ -z "${sql}" ]; then
                clear
                printf "%s\n" "${RED}Ban da chon huy khoi phuc du lieu.${NC}"
            else
                _import_database
                rm -rf /home/backup/"${date}"/"${domain}"
                clear
                printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
            fi
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    fi
}

_restore_full() {
    clear
    if [ "${location}" == "local" ]; then
        _list_backup
        if [[ -z "${date}" || -z "${domain}" ]]; then
            clear
            printf "%s\n" "${RED}Ban da chon huy thao tac${NC}"
        else
            user=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
            _conditions

            if [ -z "${ALERT}" ]; then
                clear
                printf "%s\n" "Dang khoi phuc du lieu. Vui long doi cho toi khi qua trinh hoan tat..."
                _decompress_source
                _cd_dir /home/backup/"${date}"/"${domain}"
                gzip -d "${db_name}".sql.gz
                mysql -uadmin -p"${mysql_pwd}" "${db_name}" <"${db_name}".sql
                gzip -9 "${db_name}".sql
                clear
                printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
            else
                clear
                printf "${RED}%s${NC}\n" "${ALERT}"
            fi
        fi
    else
        _google_drive_action
        _conditions
        if [ -z "${ALERT}" ]; then
            _decompress_source
            _cd_dir /home/backup/"${date}"/"${domain}"
            gzip -d "${db_name}".sql.gz
            mysql -uadmin -p"${mysql_pwd}" "${db_name}" <"${db_name}".sql
            rm -rf /home/backup/"${date}"/"${domain}"
            printf "%s\n" "${GREEN}Khoi phuc du lieu thanh cong.${NC}"
        else
            clear
            printf "${RED}%s${NC}\n" "${ALERT}"
        fi
    fi
}

_run() {
    clear
    while true; do
        read -r -p "Ban muon khoi phuc du lieu ? (y/n) " prompt_restore
        echo
        if [[ "${prompt_restore}" =~ ^([yY])$ || "${prompt_restore}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n" "${RED}Gia tri khong chinh xac. Vui long nhap lai.${NC}"
        fi
    done

    if [[ "${prompt_restore}" =~ ^([yY])$ ]]; then
        if [ "${type}" = "full" ]; then
            _restore_full
        elif [ "${type}" = "source" ]; then
            _restore_source
        else
            _restore_database
        fi
    else
        clear
        printf "%s\n" "${RED}Ban da huy thao tac.${NC}"
    fi
}

location=""
type=""
remote_name=""
remote=""
domain=""
date=""

_select_backup_location

if [[ -z "${location}" || "${location}" == "cancel" ]]; then
    clear
    printf "${RED}%s${NC}\n" "Huy thao tac."
else
    _selection_restore_type
    if [[ -z "${type}" || "${type}" == "cancel" ]]; then
        clear
        printf "${RED}%s${NC}\n" "Huy thao tac."
    else
        if [[ "${location}" == "drive" && ! -f "/root/.config/rclone/rclone.conf" ]]; then
            _create_drive_connect
        else
            _run
        fi
    fi
fi

menu_backup
