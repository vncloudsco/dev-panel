#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on Ubuntu             #
#                                                                    #
#                Author: TinyActive - Base On HOSTVN.VN Scripts      #
#                  Website: https://github.com/TinyActive/panel      #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/validate/rule
source /var/hostvn/menu/helpers/function
source /var/hostvn/menu/helpers/variable_php

printf "%s===============%s\n" "${GREEN}" "${NC}"
printf "%sThem domain moi%s\n" "${GREEN}" "${NC}"
printf "%s===============%s\n" "${GREEN}" "${NC}"
echo ""

_input() {
    false
    while [ $? -eq 1 ]; do
        read -r -p "Nhap domain (Khong co www) [0 = Thoat]: " domain
        if [ "${domain}" == "0" ]; then
            domain=0
            break
        else
            domain=$(echo "${domain}" | tr '[:upper:]' '[:lower:]')
            echo "${domain}" | grep -q "\."
            if [ $? -eq 0 ]; then
                "${BASH_DIR}"/menu/validate/check_value domain "${domain}"
                if [[ $? -eq 1 ]]; then
                    clear
                    printf "%s\n" "${RED}Ten mien ban nhap khong chinh xac vui long nhap lai.${NC}"
                    false
                fi
            else
                clear
                printf "%s\n" "${RED}Ten mien ban nhap khong chinh xac vui long nhap lai.${NC}"
                false
            fi
        fi
    done
}

# Set variables
_set_var() {
    user=${domain//[-._]/}
    user=$(echo "$user" | cut -c 1-7)
    user="${user}$(perl -le "print map+(A..Z,a..z,0..9)[rand 62],0..3")"
    prefix=$(perl -le "print map+(A..Z,a..z,0..9)[rand 62],0..3")
    php_mode="1"
}

_select_php() {
    php1="${php1_version}"
    php2=${php2_version}

    echo "Lua chon phien ban PHP ban muon su dung"
    PS3='Nhap lua chon cua ban (1-3): '
    options=("${php1}" "${php2}" "Cancel")
    select opt in "${options[@]}"; do
        case $opt in
        "${php1}")
            php_mode="1"
            break
            ;;
        "${php2}")
            php_mode="2"
            break
            ;;
        "Cancel")
            php_mode="0"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done
}

_wp_auto_install_confirm() {
    prompt_inst_wp="n"
    echo "Ban co muon tu đong cai dat WordPress moi khong ?"
    PS3='Nhap lua chon cua ban (1-2): '
    options=("Yes" "No")
    select opt in "${options[@]}"; do
        case $opt in
        "Yes")
            prompt_inst_wp="y"
            break
            ;;
        "No")
            prompt_inst_wp="n"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done
}

_laravel_auto_install_confirm() {
    prompt_inst_lar="n"
    echo "Ban co muon tu đong cai dat Laravel moi khong ? "
    PS3='Nhap lua chon cua ban (1-2): '
    options=("Yes" "No")
    select opt in "${options[@]}"; do
        case $opt in
        "Yes")
            prompt_inst_lar="y"
            break
            ;;
        "No")
            prompt_inst_lar="n"
            break
            ;;
        *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
        esac
    done
}

_laravel_auto_install() {
    if [[ $prompt_inst_lar =~ ^([yY])$ ]]; then
        laravel_version="8"
        echo "Lua chon phien ban laravel ban muon cai dat ?"
        PS3='Nhap lua chon cua ban (1-2): '
        options=("8" "7" "6" "5")
        select opt in "${options[@]}"; do
            case $opt in
            "8")
                laravel_version="8"
                break
                ;;
            "7")
                laravel_version="7"
                break
                ;;
            "6")
                laravel_version="6"
                break
                ;;
            "5")
                laravel_version="5"
                break
                ;;
            *) printf "%s\n" "${RED}Ban nhap sai, vui long nhap lai.${NC}" ;;
            esac
        done

        _cd_dir "/home/${user}/${domain}"
        rm -rf public_html
        composer create-project laravel/laravel="${laravel_version}.*" public_html <<EOF
yes
EOF
        if [ -f "/home/$user/$domain/public_html/robots.txt" ]; then
            rm -rf /home/"$user"/"$domain"/public_html/robots.txt
        fi
        cat >>"/home/$user/$domain/public_html/robots.txt" <<END
User-agent: *
END
        sed -i "s|APP_URL=http://localhost|APP_URL=http://${domain}|g" /home/"$user"/"$domain"/public_html/.env
        sed -i "s|DB_DATABASE=laravel|DB_DATABASE=${db_name}|g" /home/"$user"/"$domain"/public_html/.env
        sed -i "s|DB_USERNAME=root|DB_USERNAME=${db_user}|g" /home/"$user"/"$domain"/public_html/.env
        sed -i "s|DB_PASSWORD=|DB_PASSWORD=${db_pass}|g" /home/"$user"/"$domain"/public_html/.env
    fi
}

_wp_auto_install() {
    if [[ "${prompt_inst_wp}" =~ ^([yY])$ ]]; then
        while true; do
            read -r -p "Ban co muon thay doi database prefix khong (Mac dinh la wp_)? (y/n) " prompt_prefix
            echo
            if [[ "${prompt_prefix}" =~ ^([yY])$ || "${prompt_prefix}" =~ ^([nN])$ ]]; then
                break
            else
                printf "%s\n" "${RED}Lua chon cua ban khong chinh xac. Vui long nhap lai.${NC}"
            fi
        done

        # Create wp-config.php
        db_prefix="wp_"
        if [[ "${prompt_prefix}" =~ ^([yY])$ ]]; then
            db_prefix="$(perl -le "print map+(A..Z,a..z,0..9)[rand 62],0..4")_"
        fi

        _wp_auto_install_info
        _cd_dir "/home/${user}/${domain}/public_html"

        # Download WordPress
        wp core download --locale=en_US --allow-root
        rm -rf license.txt readme.html

        wp config create --allow-root --dbname="${db_name}" --dbuser="${db_user}" --dbpass="${db_pass}" --dbprefix="${db_prefix}" --extra-php <<PHP
define( 'WP_DEBUG', false );
define( 'FS_METHOD', 'direct');
define( 'WP_CACHE', true);
define( 'WP_MEMORY_LIMIT', '128M' );
define( 'WP_MAX_MEMORY_LIMIT', '128M' );
PHP

        # Install WordPress
        wp core install --url="${domain}" --title="${site_name}" --admin_user="${admin_user}" --admin_password="${admin_pwd}" --admin_email="${admin_email}" --allow-root

        if [ -f "/home/$user/$domain/public_html/robots.txt" ]; then
            rm -rf /home/"$user"/"$domain"/public_html/robots.txt
        fi

        # Create robots.txt
        cat >>"/home/$user/$domain/public_html/robots.txt" <<END
User-agent: *
Disallow: /wp-admin/
Disallow: /wp-includes/
Disallow: /search?q=*
Disallow: *?replytocom
Disallow: */attachment/*
Disallow: /images/
Allow: /wp-admin/admin-ajax.php
Allow: /*.js$
Allow: /*.css$
END

        mv /home/"${user}"/"${domain}"/public_html/wp-config.php /home/"${user}"/"${domain}"/wp-config.php
    fi
}

# Create
_create_user() {
    if ! if_user_exists "${user}"; then
        user_pass=$(_gen_pass)
        useradd --shell=/bin/false "${user}"
        usermod -G filetransfer "${user}"
        passwd "${user}" <<EOF
${user_pass}
${user_pass}
EOF
    fi
}

_confirm_create_db() {
    while true; do
        read -r -p "Ban co muon tao san Database va user Mysql khong (y/n)? " prompt_create_db
        echo
        if [[ "${prompt_create_db}" =~ ^([yY])$ || "${prompt_create_db}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n" "${RED}Lua chon cua ban khong chinh xac. Vui long nhap lai.${NC}"
        fi
    done

    if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
        while true; do
            read -r -p "Ban co muon tao random ten Database va random User Mysql khong (y/n)? " prompt_random_mysql
            echo
            if [[ "${prompt_random_mysql}" =~ ^([yY])$ || "${prompt_random_mysql}" =~ ^([nN])$ ]]; then
                break
            else
                printf "%s\n" "${RED}Lua chon cua ban khong chinh xac. Vui long nhap lai.${NC}"
            fi
        done

        if [[ "${prompt_random_mysql}" =~ ^([yY])$ ]]; then
            db_user=$(echo "${user}"_"${prefix}" | tr '[:upper:]' '[:lower:]')
            db_name=$(echo "${prefix}"_"${user}" | tr '[:upper:]' '[:lower:]')
        else
            while true; do
                printf "%s\n" "${RED}User Mysql chi duoc phep chua chu cai viet thuong, chu so va dau gach duoi.${NC}"
                read -r -p "Nhap vao User Mysql muon tao? " db_user
                echo
                if validate_db_name "${db_user}"; then
                    break
                else
                    printf "%s\n" "${RED}User Mysql khong dung dinh dang. Vui long nhap lai.${NC}"
                fi
            done

            while true; do
                printf "%s\n" "${RED}Ten database chi duoc phep chua chu cai viet thuong, chu so va dau gach duoi.${NC}"
                read -r -p "Nhap vao Ten database muon tao? " db_name
                echo
                if validate_db_name "${db_name}"; then
                    break
                else
                    printf "%s\n" "${RED}Ten database khong dung dinh dang. Vui long nhap lai.${NC}"
                fi
            done

            db_user=$(echo "${db_user}" | tr '[:upper:]' '[:lower:]')
            db_name=$(echo "${db_name}" | tr '[:upper:]' '[:lower:]')
        fi

        clear
        while true; do
            read -r -p "Ban co muon tao random mat khau Mysql khong (y/n)? " prompt_random_mysql_pass
            echo
            if [[ "${prompt_random_mysql_pass}" =~ ^([yY])$ || "${prompt_random_mysql_pass}" =~ ^([nN])$ ]]; then
                break
            else
                printf "%s\n" "${RED}Lua chon cua ban khong chinh xac. Vui long nhap lai.${NC}"
            fi
        done

        if [[ "${prompt_random_mysql_pass}" =~ ^([yY])$ ]]; then
            db_pass=$(_gen_pass)
        else
            read -r -p "Nhap vao mat khau Mysql: " db_pass
        fi
    fi
}

_create_db() {
    Q1="CREATE DATABASE IF NOT EXISTS ${db_name} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    Q2="GRANT ALL ON ${db_name}.* TO '${db_user}'@'localhost' IDENTIFIED BY '${db_pass}';"
    Q3="FLUSH PRIVILEGES;"
    SQL="${Q1}${Q2}${Q3}"

    mysql -uadmin -p"${mysql_pwd}" -e "${SQL}"
}

_create_doc_root() {
    mkdir -p /home/"${user}"/"${domain}"/public_html
    mkdir -p /home/"${user}"/"${domain}"/logs
}

_set_owner() {
    chmod 711 /home
    chmod 755 /home/"${user}"
    chmod 711 /home/"${user}"/"${domain}"
    chmod 711 /home/"${user}"/"${domain}"/logs
    chmod 755 /home/"${user}"/"${domain}"/public_html
    find /home/"${user}"/"${domain}"/public_html/ -type d -print0 | xargs -I {} -0 chmod 0755 {}
    find /home/"${user}"/"${domain}"/public_html/ -type f -print0 | xargs -I {} -0 chmod 0644 {}
    chown root:root /home/"${user}"
    chown -R "${user}":"${user}" /home/"${user}"/"${domain}"
    if [ -d "/home/${user}/tmp" ]; then
        chown -R "${user}":"${user}" /home/"${user}"/tmp
    fi

    if [ -d "/home/${user}/php" ]; then
        chown -R "${user}":"${user}" /home/"${user}"/php
    fi
}

_create_php_config() {
    php_conf_file="/etc/php/$php1_version/fpm/pool.d/${domain}.conf"
    SLOW_LOG="/home/${user}/${domain}/logs/php-slow.log"
    ERROR_LOG_PATH="/home/${user}/${domain}/logs/php-error.log"
    TMP_DIR="/home/${user}/tmp"
    SESSION_PATH="/home/${user}/php/session"
    CACHE_DIR="/home/${user}/php/wsdlcache"

    if [[ "${php2_release}" == "yes" && "${php_mode}" == "2" ]]; then
        php_conf_file="/etc/php/${php2_version}/fpm/pool.d/${domain}.conf"
    fi

    mkdir -p "${TMP_DIR}"
    mkdir -p "${SESSION_PATH}"
    mkdir -p "${CACHE_DIR}"
    chmod 700 "${SESSION_PATH}"
    chmod 700 "${CACHE_DIR}"

    if [ -f "${php_conf_file}" ]; then
        rm -rf "${php_conf_file}"
    fi

    cp "${TEMPLATE_DIR}/php_ondemand.conf" "${php_conf_file}"

    sed -i "s|WEBSITE_USER|${user}|g" "${php_conf_file}"
    sed -i "s|PM_MAX_CHILDREN|${PM_MAX_CHILDREN}|g" "${php_conf_file}"
    sed -i "s|PM_MAX_REQUEST|${PM_MAX_REQUEST}|g" "${php_conf_file}"
    sed -i "s|PM_START_SERVERS|${PM_START_SERVERS}|g" "${php_conf_file}"
    sed -i "s|PM_MIN_SPARE_SERVER|${PM_MIN_SPARE_SERVER}|g" "${php_conf_file}"
    sed -i "s|PM_MAX_SPARE_SERVER|${PM_MAX_SPARE_SERVER}|g" "${php_conf_file}"
    sed -i "s|SLOW_LOG|${SLOW_LOG}|g" "${php_conf_file}"
    sed -i "s|TMP_DIR|${TMP_DIR}|g" "${php_conf_file}"
    sed -i "s|ERROR_LOG_PATH|${ERROR_LOG_PATH}|g" "${php_conf_file}"
    sed -i "s|SESSION_PATH|${SESSION_PATH}|g" "${php_conf_file}"
    sed -i "s|CACHE_DIR|${CACHE_DIR}|g" "${php_conf_file}"
}

_create_vhost() {
    if [ -f "${CUSTOM_DIR}/${SOURCE}.conf" ]; then
        cp "${CUSTOM_DIR}"/"${SOURCE}".conf "${VHOST_DIR}"/"${domain}".conf
    elif [ -f "${TEMPLATE_DIR}/${SOURCE}.conf" ]; then
        cp "${TEMPLATE_DIR}"/"${SOURCE}".conf "${VHOST_DIR}"/"${domain}".conf
    else
        if [ -f "${CUSTOM_DIR}/default.conf" ]; then
            cp "${CUSTOM_DIR}"/default.conf "${VHOST_DIR}"/"${domain}".conf
        else
            cp "${TEMPLATE_DIR}"/default.conf "${VHOST_DIR}"/"${domain}".conf
        fi
    fi

    if [ "${SOURCE}" == "wordpress" ]; then
        sed -i '/PLUGIN_CACHE/d' "${VHOST_DIR}"/"${domain}".conf
        sed -i '/PLUGIN_SEO/d' "${VHOST_DIR}"/"${domain}".conf
    fi

    if [ "${SOURCE}" == "nodejs" ]; then
        sed -i "s/PROXY_PORT/${proxy_port}/g" "${VHOST_DIR}"/"${domain}".conf
    fi

    sed -i '/HTPASSWD/d' "${VHOST_DIR}"/"${domain}".conf
    sed -i "s|WEBSITE_USER|${user}|g" "${VHOST_DIR}"/"${domain}".conf
    sed -i "s|WEBSITE_DOMAIN|${domain}|g" "${VHOST_DIR}"/"${domain}".conf
    sed -i "s|WEBSITE_SOURCE|${SOURCE}|g" "${VHOST_DIR}"/"${domain}".conf

    if [ ! -d "${NGINX_CONF_DIR}/php/${domain}" ]; then
        mkdir -p "${NGINX_CONF_DIR}"/php/"${domain}"
    fi

    rm -rf "${NGINX_CONF_DIR}"/php/"${domain}"/php_no_cache.conf
    rm -rf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache.conf
    rm -rf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache_woo.conf

    if [ -f "${CUSTOM_DIR}/php_no_cache.conf" ]; then
        cp "${CUSTOM_DIR}"/php_no_cache.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_no_cache.conf
    else
        cp "${TEMPLATE_DIR}"/php_no_cache.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_no_cache.conf
    fi

    if [ -f "${CUSTOM_DIR}/php_cache.conf" ]; then
        cp "${CUSTOM_DIR}"/php_cache.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache.conf
    else
        cp "${TEMPLATE_DIR}"/php_cache.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache.conf
    fi

    if [ -f "${CUSTOM_DIR}/php_cache_woo.conf" ]; then
        cp "${CUSTOM_DIR}"/php_cache_woo.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache_woo.conf
    else
        cp "${TEMPLATE_DIR}"/php_cache_woo.conf "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache_woo.conf
    fi

    sed -i "s/WEBSITE_USER/${user}/g" "${NGINX_CONF_DIR}"/php/"${domain}"/php_no_cache.conf
    sed -i "s/WEBSITE_USER/${user}/g" "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache.conf
    sed -i "s/WEBSITE_USER/${user}/g" "${NGINX_CONF_DIR}"/php/"${domain}"/php_cache_woo.conf
    sed -i "s|PHP_CONFIG|include ${NGINX_CONF_DIR}/php/${domain}/php_no_cache.conf;|g" "${VHOST_DIR}"/"${domain}".conf
}

_save_user_config() {
    php_ver=${php1_version}

    if [[ "${php_mode}" == "2" ]]; then
        php_ver="${php2_version}"
        php_mode="2"
    fi

    if [ -f "${USER_DIR}/.${domain}.conf" ]; then
        rm -rf "${USER_DIR}/.${domain}.conf"
    fi

    cat >>"${USER_DIR}/.${domain}.conf" <<END
[${domain}]
username=${user}
user_pass=${user_pass}
domain=${domain}
db_name=${db_name}
db_user=${db_user}
db_password=${db_pass}
public_html=/home/${user}/${domain}/public_html
php_pm=ondemand
php_version=${php_ver}
plugin_seo=
plugin_cache=
disable_xmlrpc=yes
disable_user_api=yes
disable_file_edit=no
lock_folder=no
END
    chmod 600 "${USER_DIR}"/."${domain}".conf
}

_added_error_ssl_page(){
    if [ "${SOURCE}" == 'laravel' ]; then
        cp "${TEMPLATE_DIR}"/error_page/hvn_404.html "/home/${user}/${domain}/public_html/public/"
    elif [ "${SOURCE}" == 'cakephp' ]; then
        cp "${TEMPLATE_DIR}"/error_page/hvn_404.html "/home/${user}/${domain}/public_html/webroot/"
    else
        cp "${TEMPLATE_DIR}"/error_page/hvn_404.html "/home/${user}/${domain}/public_html/"
    fi
}

_show_info() {
    echo ""
    printf "Ban đa them domain thanh cong. Hay luu lai thong tin de su dung\n"
    echo "---------------------------------------------------------------"
    printf "* Domain                     : %s\n" "${domain}"
    if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
        printf "* DB_Name                    : %s\n" "${db_name}"
        printf "* DB_User                    : %s\n" "${db_user}"
        printf "* DB_Password                : %s\n" "${db_pass}"
    fi
    printf "* Username (SFTP)             : %s\n" "${user}"
    printf "* Password (SFTP)             : %s\n" "${user_pass}"
    printf "* SFTP Host                   : %s\n" "${IPADDRESS}"
    printf "* SFTP Port                   : %s\n" "${ssh_port}"
    printf "* Public_html                 : %s\n" "/home/${user}/${domain}/public_html"
    if [ "${prompt_inst_wp}" = "y" ]; then
        printf "* User dang nhap wp-admin    : %s\n" "${admin_user}"
        printf "* Mat khau dang nhap wp-admin: %s\n" "${admin_pwd}"
    fi
    printf "* File vHost                   : %s\n" "${VHOST_DIR}/${domain}.conf"
    printf "* File PHP config              : %s\n" "/etc/php/${php_ver}/fpm/pool.d/${domain}.conf"
    echo "---------------------------------------------------------------"
}

_run() {
    check_domain_exists "${domain}"

    if [ -z "${ALERT}" ]; then
        _select_source
        _confirm_create_db

        if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
            check_database "${db_name}"
            check_mysql_user "${db_user}"
        fi

        if [ -z "${ALERT}" ]; then
            if [ "${SOURCE}" == "nodejs" ]; then
                printf "%s\n" "${GREEN}Luu y: IP Server trong config Nodejs can duoc sua thanh${NC} ${RED}127.0.0.1${NC}"
                while true; do
                    read -r -p "Nhap Port Nodejs: " proxy_port
                    if valid_number "${proxy_port}"; then
                        break
                    else
                        clear
                        printf "%s\n" "${RED}Port khong chinh xac, vui long nhap lai.${NC}"
                    fi
                done
            fi

            if [[ "${SOURCE}" == "wordpress" ]]; then
                clear
                if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
                    _wp_auto_install_confirm
                fi
            fi

            if [[ "${SOURCE}" == "laravel" ]]; then
                if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
                    _laravel_auto_install_confirm
                fi
            fi

            if [[ "${prompt_create_db}" =~ ^([yY])$ ]]; then
                _create_db
            fi

            if [ "${SOURCE}" != "nodejs" ]; then
                _create_php_config
            fi

            _create_user
            _create_doc_root

            _laravel_auto_install
            _wp_auto_install "$@"

            _create_vhost
            _added_error_ssl_page

            _set_owner
            _save_user_config

            if nginx -t; then
                _restart_service
                clear
                _show_info
            else
                clear
                nginx -t
                printf "%s\n" "${RED}Loi cau hinh vHost Nginx. Vui long kiem tra lai.${NC}"
                printf "%s\n" "${RED}Ban co the su dung menu Rewrite Config (1 - 5) neu khong the tu sua loi.${NC}"
            fi
        else
            clear
            printf "%s\n" "${ALERT}"
        fi
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
}

ALERT=""
SOURCE=""
domain=""
prompt_prefix=""
prompt_inst_wp=""
prompt_create_db=""

if [ -z "${ALERT}" ]; then
    _input
    if [ "${domain}" == "0" ]; then
        clear
        echo ""
    else
        domain=${domain//www.}
        _set_var "$@"
        if [[ "${php2_release}" == "yes" ]]; then
            _select_php
        fi
        if [ "${php_mode}" == "0" ]; then
            clear
            printf "%s\n" "${RED}Huy thao tac.${NC}"
        else
            domain=${domain//www./}

            _run "$@"
            echo ""
        fi
    fi
else
    clear
    printf "%s\n" "${ALERT}"
fi

menu_domain
