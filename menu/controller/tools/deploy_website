#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on Ubuntu             #
#                                                                    #
#                Author: Sanvv - HOSTVN Technical                    #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/validate/rule
source /var/hostvn/menu/helpers/function

_select_resource() {
    _cd_dir /home/"${user}"/"${domain}"/public_html
    compress_files=()
    for file_entry in *.{zip,tar.gz,tgz}; do
        if [ -f "${file_entry}" ]; then
            compress_files+=("${file_entry}")
        fi
    done

    if [ ${#compress_files[@]} -ne 0 ]; then
        clear
        echo "Chon file  muon giai nen"
        PS3="Nhap vao lua chon cua ban [0 = Thoat]: "
        select opt_file in "${compress_files[@]}"; do
            file=$opt_file
            break
        done

        if [ -z "${file}" ]; then
            ALERT=$(printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}")
        else
            _cd_dir /home/"${user}"/"${domain}"/public_html
            sql_files=()
            for entry_sql in *.{sql,sql.gz}; do
                if [ -f "${entry_sql}" ]; then
                    sql_files+=("${entry_sql}")
                fi
            done

            if [ ${#sql_files[@]} -ne 0 ]; then
                echo "Chon file database muon khoi phuc"
                PS3="Nhap vao lua chon cua ban [0 = Thoat]: "
                select opt_sql in "${sql_files[@]}"; do
                    sql=$opt_sql
                    break
                done

                if [ -z "${sql}" ]; then
                    ALERT=$(printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}")
                fi
            fi
        fi
    else
        ALERT=$(printf "%s\n" "${RED}Khong tim thay file nen nao trong Public_html.${NC}")
    fi
}

_deploy_source() {
    file_type=$(file --mime-type -b "${file}")
    if [ "${file_type}" == "application/zip" ]; then
        if [ ! -f "/usr/bin/unzip" ]; then
            yum -y install unzip
        fi
        unzip "${file}"
    fi

    if [[ "${file_type}" == "application/x-gzip" || "${file_type}" == "application/x-tar" || "${file_type}" == "application/gzip" || "${file_type}" == "application/x-gtar" ]]; then
        tar -xvf "${file}"
    fi
    if [ -d "/home/${user}/${domain}/public_html/public_html" ]; then
        mv /home/"${user}"/"${domain}"/public_html/public_html/* /home/"${user}"/"${domain}"/public_html/
        mv /home/"${user}"/"${domain}"/public_html/public_html/.[!.]* /home/"${user}"/"${domain}"/public_html/
    fi
    chown -R "${user}":"${user}" /home/"${user}"/"${domain}"/public_html
    rm -rf "${file}"
}

_deploy_db() {
    _empty_db
    if [[ ${sql} == *"sql.gz"* || ${sql} == *".sql"* ]]; then
        if [[ ${sql} == *"sql.gz"* ]]; then
            sql_file=$(echo "${sql}" | cut -f1 -d'.')
            gzip -d "${sql}"
            mysql -uadmin -p"${mysql_pwd}" "${db_name}" <"${sql_file}".sql
            rm -rf "${sql_file}".sql
        else
            mysql -uadmin -p"${mysql_pwd}" "${db_name}" <"${sql}"
            rm -rf "${sql}"
        fi
    fi
}

_edit_wp_config() {
    _cd_dir /home/"${user}"/"${domain}"/public_html
    db_prefix=$(wp config get table_prefix --allow-root)

    rm -rf wp-config.php
    rm -rf license.txt readme.html

    wp config create --allow-root --dbname="${db_name}" --dbuser="${db_user}" --dbpass="${db_password}" --dbprefix="${db_prefix}" --extra-php <<PHP
define( 'WP_DEBUG', false );
define( 'FS_METHOD', 'direct');
define( 'WP_CACHE', true);
define( 'WP_MEMORY_LIMIT', '128M' );
define( 'WP_MAX_MEMORY_LIMIT', '128M' );
PHP
}

_change_wordpress_domain() {
    old_domain=$(wp option get siteurl --allow-root | cut -f2 -d':')
    old_domain=${old_domain//[\/]/}
    if [ "${old_domain}" != "${domain}" ]; then
        _cd_dir /home/"${user}"/"${domain}"/public_html
        wp search-replace --allow-root "${old_domain}" "${domain}"
    fi
}

_chmod_chown() {
    chmod 711 /home
    chmod 755 /home/"${user}"
    chmod 711 /home/"${user}"/"${domain}"
    chmod 711 /home/"${user}"/"${domain}"/logs
    chmod 755 /home/"${user}"/"${domain}"/public_html
    find /home/"${user}"/"${domain}"/public_html/ -type d -print0 | xargs -I {} -0 chmod 0755 {}
    find /home/"${user}"/"${domain}"/public_html/ -type f -print0 | xargs -I {} -0 chmod 0644 {}
    chown root:root /home/"${user}"
    chown -R "${user}":"${user}" /home/"${user}"/"${domain}"
    chown -R "${user}":"${user}" /home/"${user}"/tmp
    chown -R "${user}":"${user}" /home/"${user}"/php
}

_run() {
    _select_resource

    if [ -n "${ALERT}" ]; then
        printf "%s\n" "${ALERT}"
    else
        clear
        db_name=$(grep -w "db_name" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
        db_user=$(grep -w "db_user" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
        db_password=$(grep -w "db_password" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
        _deploy_source
        _deploy_db
        if [ -d "/home/${user}/${domain}/public_html/wp-includes" ]; then
            _edit_wp_config
            _change_wordpress_domain
        fi
        _chmod_chown
        if nginx -t; then
            _restart_service
            clear
            printf "%s\n" "${GREEN}Deploy website thanh cong.${NC}"
        else
            clear
            nginx -t
            printf "%s\n" "${RED}Loi cau hinh vHost Nginx. Vui long kiem tra lai.${NC}"
            printf "%s\n" "${RED}Ban co the su dung menu Rewrite Config (1 - 5) neu khong the tu sua loi.${NC}"
        fi
    fi
}

ALERT=""
domain=""
db_prefix=""
sql=""
file=""

_select_domain

if [[ -z "${domain}" && -z "${ALERT}" ]]; then
    clear
    printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}"
else
    if [ -z "${ALERT}" ]; then
        user=$(grep -w "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
        _run
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
fi

menu_tools
