upstream php-WEBSITE_USER {
    server unix:/var/run/php/WEBSITE_USER.sock;
}

server {
    listen 80;
    server_name WEBSITE_DOMAIN www.WEBSITE_DOMAIN;
    #access_log off;
    #access_log /home/WEBSITE_USER/WEBSITE_DOMAIN/logs/access.log;
    #error_log off;
    error_log /home/WEBSITE_USER/WEBSITE_DOMAIN/logs/error.log;
    set $MAGE_ROOT /home/WEBSITE_USER/WEBSITE_DOMAIN/public_html;
    set $MAGE_DEBUG_SHOW_ARGS 1;

    root $MAGE_ROOT/pub;

    index index.html index.htm index.php;
    error_page 404 403 = /errors/404.php;
    HTPASSWD
    # Deny access to sensitive files
    location /.user.ini {
        deny all;
        access_log off;
        log_not_found off;
    }

    # PHP entry point for setup application
    location ~* ^/setup($|/) {
        root $MAGE_ROOT;
        location ~ ^/setup/index.php {
            fastcgi_pass php-WEBSITE_USER;

            fastcgi_param  PHP_FLAG  "session.auto_start=off n suhosin.session.cryptua=off";
            fastcgi_param  PHP_VALUE "memory_limit=756M n max_execution_time=600";

            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include /etc/nginx/fastcgi_params;
            include /etc/nginx/extra/nginx_limits.conf;
        }

        location ~ ^/setup/(?!pub/). {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/setup/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    # PHP entry point for update application
    location ~* ^/update($|/) {
        root $MAGE_ROOT;

        location ~ ^/update/index.php {
            fastcgi_split_path_info ^(/update/index.php)(/.+)$;
            fastcgi_pass php-WEBSITE_USER;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO        $fastcgi_path_info;
            include /etc/nginx/fastcgi_params;
            include /etc/nginx/extra/nginx_limits.conf;
        }

        # Deny everything but index.php
        location ~ ^/update/(?!pub/). {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/update/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location /pub/ {
        location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*.xml) {
            deny all;
            access_log off;
            log_not_found off;
        }
        alias $MAGE_ROOT/pub/;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        # Uncomment the following line in production mode
        # expires max;

        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version {
            rewrite ^/static/(versiond*/)?(.*)$ /static/$2 last;
        }

        location ~* .(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        location ~* .(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {
        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*.xml {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* .(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        location ~* .(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/customer/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/downloadable/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/import/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/custom_options/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /errors/ {
        location ~* .xml$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # PHP entry point for main application
    location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check).php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        include /etc/nginx/extra/nginx_limits.conf;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        if (-f $request_filename)
        {
            fastcgi_pass php-WEBSITE_USER;
        }
    }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (.php$|.phtml$|.htaccess$|.git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    include /etc/nginx/extra/security.conf;
}

server {
    listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    server_name WEBSITE_DOMAIN www.WEBSITE_DOMAIN;
    return 404;
    error_page 404 /hvn_404.html;
    #access_log off;
    #access_log /home/WEBSITE_USER/WEBSITE_DOMAIN/logs/access.log;
    #error_log off;
    error_log /home/WEBSITE_USER/WEBSITE_DOMAIN/logs/error.log;
    set $MAGE_ROOT /home/WEBSITE_USER/WEBSITE_DOMAIN/public_html;
    set $MAGE_DEBUG_SHOW_ARGS 1;

    root $MAGE_ROOT/pub;
    index index.html index.htm index.php;
    ssl_certificate /etc/nginx/ssl/server/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server/server.key;
    HTPASSWD
    error_page 404 403 = /errors/404.php;
    # Deny access to sensitive files
    location /.user.ini {
        deny all;
        access_log off;
        log_not_found off;
    }

    # PHP entry point for setup application
    location ~* ^/setup($|/) {
        root $MAGE_ROOT;
        location ~ ^/setup/index.php {
            fastcgi_pass php-WEBSITE_USER;

            fastcgi_param  PHP_FLAG  "session.auto_start=off n suhosin.session.cryptua=off";
            fastcgi_param  PHP_VALUE "memory_limit=756M n max_execution_time=600";

            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include /etc/nginx/fastcgi_params;
            include /etc/nginx/extra/nginx_limits.conf;
        }

        location ~ ^/setup/(?!pub/). {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/setup/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    # PHP entry point for update application
    location ~* ^/update($|/) {
        root $MAGE_ROOT;

        location ~ ^/update/index.php {
            fastcgi_split_path_info ^(/update/index.php)(/.+)$;
            fastcgi_pass php-WEBSITE_USER;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO        $fastcgi_path_info;
            include /etc/nginx/fastcgi_params;
            include /etc/nginx/extra/nginx_limits.conf;
        }

        # Deny everything but index.php
        location ~ ^/update/(?!pub/). {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/update/pub/ {
            add_header X-Frame-Options "SAMEORIGIN";
        }
    }

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location /pub/ {
        location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*.xml) {
            deny all;
            access_log off;
            log_not_found off;
        }
        alias $MAGE_ROOT/pub/;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        # Uncomment the following line in production mode
        # expires max;

        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version {
            rewrite ^/static/(versiond*/)?(.*)$ /static/$2 last;
        }

        location ~* .(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        location ~* .(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/(versiond*/)?(.*)$ /static.php?resource=$2 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {
        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*.xml {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* .(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        location ~* .(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/customer/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/downloadable/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/import/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /media/custom_options/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location /errors/ {
        location ~* .xml$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # PHP entry point for main application
    location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check).php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        include /etc/nginx/extra/nginx_limits.conf;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        if (-f $request_filename)
        {
            fastcgi_pass php-WEBSITE_USER;
        }
    }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (.php$|.phtml$|.htaccess$|.git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    include /etc/nginx/extra/security.conf;
}
